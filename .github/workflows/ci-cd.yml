name: build push and deploy image
on:
    push:
        branches: [ "main" ]
    pull_request:
        branches: [ "main" ]


permissions:
            contents: read # to checkout code
            id-token: write # to assume role in AWS
env:
    AWS_REGION: us-east-1
    AWS_ACTION_ROLE: ${{ secrets.AWS_ACTION_ROLE }}
    ECR_REPO_NAME: dev
    IMAGE_TAG: ${{ github.run_number }} 

jobs:
    build:
        runs-on: ubuntu-latest #github-hosted runner
        
        steps:
          - name: clone repo
            uses: actions/checkout@v3
          - name: AWS creds config
            uses: aws-actions/configure-aws-credentials@v3
            with:
               role-to-assume: ${{ env.AWS_ACTION_ROLE }}   #Open ID connect 
               aws-region: ${{ env.AWS_REGION }}
          - name: Login to ECR
            uses: aws-actions/amazon-ecr-login@v1 
            id: ecr-login
          - name: Bulid and tag 
            id: build-and-push
            run: |
                docker build -t ${{steps.ecr-login.outputs.registry }}/${{ env.ECR_REPO_NAME }}:${{env.IMAGE_TAG}} .

          - name: Scan docker Image for vulnerabilities
            uses: aquasecurity/trivy-action@master
            with:
                image-ref: "${{steps.ecr-login.outputs.registry }}/${{ env.ECR_REPO_NAME }}:${{env.IMAGE_TAG}}"  # Scans the built image
                format: "table"
                exit-code: "1"
                severity: "CRITICAL,HIGH"
          - name: Push image to ECR
            run: |
                docker push ${{steps.ecr-login.outputs.registry }}/${{ env.ECR_REPO_NAME }}:${{env.IMAGE_TAG}}